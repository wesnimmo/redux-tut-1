{"ast":null,"code":"import axios from 'axios';\nimport { ActionTypes } from '../constants/action-types';\nexport const fetchProducts = () => {\n  return async function (dispatch, getState) {\n    const response = await axios.get(\"/products\");\n    dispatch({\n      type: ActionTypes.FETCH_PRODUCTS,\n      payload: response.data\n    });\n  };\n};\nexport const setProducts = products => {\n  return {\n    type: ActionTypes.SET_PRODUCTS,\n    payload: products\n  };\n};\nexport const selectedProduct = product => {\n  return {\n    type: ActionTypes.SELECTED_PRODUCT,\n    payload: product\n  };\n};\nexport const removeSelectedProduct = () => {\n  return {\n    type: ActionTypes.REMOVE_SELECTED_PRODUCT\n  };\n};","map":{"version":3,"sources":["/Users/wesleynimmo/Desktop/Cristian Coaching/6-part_III/redux/ecommerce/src/redux/actions/productActions.js"],"names":["axios","ActionTypes","fetchProducts","dispatch","getState","response","get","type","FETCH_PRODUCTS","payload","data","setProducts","products","SET_PRODUCTS","selectedProduct","product","SELECTED_PRODUCT","removeSelectedProduct","REMOVE_SELECTED_PRODUCT"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAEjC,SAAO,gBAAgBC,QAAhB,EAA0BC,QAA1B,EAAmC;AACxC,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,WAAV,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAACN,WAAW,CAACO,cAAlB;AAAkCC,MAAAA,OAAO,EAACJ,QAAQ,CAACK;AAAnD,KAAD,CAAR;AACD,GAJD;AAKD,CAPM;AASP,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHL,IAAAA,IAAI,EAAEN,WAAW,CAACY,YADf;AAEHJ,IAAAA,OAAO,EAAEG;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,eAAe,GAAIC,OAAD,IAAa;AACxC,SAAO;AACHR,IAAAA,IAAI,EAAEN,WAAW,CAACe,gBADf;AAEHP,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,qBAAqB,GAAG,MAAM;AACzC,SAAO;AACLV,IAAAA,IAAI,EAAEN,WAAW,CAACiB;AADb,GAAP;AAGD,CAJM","sourcesContent":["import axios from 'axios';\nimport { ActionTypes } from '../constants/action-types'\n\nexport const fetchProducts = () => {\n  \n  return async function (dispatch, getState){\n    const response = await axios.get(\"/products\")\n\n    dispatch({type:ActionTypes.FETCH_PRODUCTS, payload:response.data})\n  }\n};\n\nexport const setProducts = (products) => {\n    return {\n        type: ActionTypes.SET_PRODUCTS,\n        payload: products\n    }\n};\n\nexport const selectedProduct = (product) => {\n    return {\n        type: ActionTypes.SELECTED_PRODUCT,\n        payload: product\n    }\n}\n\nexport const removeSelectedProduct = () => {\n  return {\n    type: ActionTypes.REMOVE_SELECTED_PRODUCT,\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}